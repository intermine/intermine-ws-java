buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.6.2"
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: "checkstyle"

sourceSets {
  main {
    java {
      srcDirs = ['src/main/java', 'build/gen']
    }
    resources {
      srcDirs = ['src/main/resources']
    }
  }
  test {
    java {
      srcDirs = ['src/test/java']
    }
    resources {
      srcDirs = ['src/test/resources']
    }
  }
}


group 'org.intermine'
version '3.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8
  
repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile group: "org.intermine", name: "intermine-pathquery", version: System.getProperty("imVersion")
  compile group: "org.intermine", name: "intermine-webapp", version: System.getProperty("imVersion")
  compile group: "org.intermine", name: "intermine-model", version: System.getProperty("imVersion")
  compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
  compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
  compile group: 'org.json', name: 'json', version: '20131018'
  testCompile group: 'junit', name: 'junit', version: '4.8.2'
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

checkstyle {
  toolVersion '7.8.1'
  configFile file("../../config/checkstyle/checkstyle.xml")
  sourceSets = [sourceSets.main]
  showViolations = true
  ignoreFailures = false
  maxWarnings = 0
  //reportsDir = file("$project.rootDir/reports/checkstyle/$project.name")
  configProperties = [
          'checkstyle.header.file': "../config/checkstyle/copyright_header.txt",
          'suppressionFile': "../config/checkstyle/suppressions.xml"
  ]
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
  publish = true //[Default: false] Whether version should be auto published after an upload
  override = true //[Default: false] Whether to override version artifacts already published
  pkg {
    repo = 'java-client'
    name = project.name
    userOrg = user
    licenses = ['LGPL-2.1']
    vcsUrl = 'https://github.com/intermine/intermine-ws-java.git'
    publicDownloadNumbers = true
    version {
      name = '3.0.0'
      desc = 'InterMine 3.0.0'
      vcsTag = 'java-client-3.0.0'
    }
  }

  configurations = ['archives']
}



